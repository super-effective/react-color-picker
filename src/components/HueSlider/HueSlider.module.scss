@use 'sass:math';
@use 'src/styles/variables' as *;

.hue_slider {
  position: relative;
  height: $huePickerHeight;
  // Need to account for hue_slider_picker overflow
  margin-left: math.div($huePickerWidth, 2) + $pickerBorderWidth;
  margin-right: math.div($huePickerWidth, 2) + $pickerBorderWidth;
  margin-bottom: $pickerBorderWidth; // Overflow = hue_slider_picker border width

  background-image: linear-gradient(to left, #ff0000 0%,#ff00ff 16.66%,#0000ff 33.33%,#00ffff 50%,#00ff00 66.66%,#ffff00 80.33%, #ff0000 100%);

  &.vertical {
    width: $huePickerHeight;
    height: 100%;
    background-image: linear-gradient(to top, #ff0000 0%,#ff00ff 16.66%,#0000ff 33.33%,#00ffff 50%,#00ff00 66.66%,#ffff00 80.33%, #ff0000 100%);

    .hue_slider_picker {
      top: 0;
      left: -$pickerBorderWidth; // Overflow = hue_slider_picker border width

      width: 100%;
      height: $huePickerWidth;

      transform: translateY(-50%);
    }
  }

  .hue_slider_picker {
    position: absolute;
    top: -$pickerBorderWidth; // Overflow = hue_slider_picker border width
    left: 0;

    width: $huePickerWidth;
    height: 100%;

    border: $pickerBorderWidth solid #ffffff;
    box-shadow: $pickerBoxShadow;
    background-color: #ff0000;

    border-radius: (math.div($huePickerWidth, 2)) + $pickerBorderWidth;

    cursor: pointer;

    transform: translateX(-50%);
  }
}
